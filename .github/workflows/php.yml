name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          ports: 8889:8889 
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      phpmyadmin:
        image: phpmyadmin/phpmyadmin
        env:
         PMA_HOST: mysql
         PMA_USER: root
         PMA_PASSWORD: root
         ports: 8080:80


    steps:
    - uses: actions/checkout@v2
    - name: installe mysql
      run: docker-php-ext-install mysqli pdo pdo_mysql
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --ignore-platform-reqs
    - name: create dataBase
      run: php bin/console d:d:c
    

    #- name: Run test suite
      #run: php bin/phpunit
